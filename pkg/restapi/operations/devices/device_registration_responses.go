// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "device-manager/pkg/models"
)

// DeviceRegistrationOKCode is the HTTP code returned for type DeviceRegistrationOK
const DeviceRegistrationOKCode int = 200

/*DeviceRegistrationOK OK

swagger:response deviceRegistrationOK
*/
type DeviceRegistrationOK struct {

	/*
	  In: Body
	*/
	Payload *DeviceRegistrationOKBody `json:"body,omitempty"`
}

// NewDeviceRegistrationOK creates DeviceRegistrationOK with default headers values
func NewDeviceRegistrationOK() *DeviceRegistrationOK {

	return &DeviceRegistrationOK{}
}

// WithPayload adds the payload to the device registration o k response
func (o *DeviceRegistrationOK) WithPayload(payload *DeviceRegistrationOKBody) *DeviceRegistrationOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the device registration o k response
func (o *DeviceRegistrationOK) SetPayload(payload *DeviceRegistrationOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeviceRegistrationOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeviceRegistrationUnprocessableEntityCode is the HTTP code returned for type DeviceRegistrationUnprocessableEntity
const DeviceRegistrationUnprocessableEntityCode int = 422

/*DeviceRegistrationUnprocessableEntity Error

swagger:response deviceRegistrationUnprocessableEntity
*/
type DeviceRegistrationUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResult `json:"body,omitempty"`
}

// NewDeviceRegistrationUnprocessableEntity creates DeviceRegistrationUnprocessableEntity with default headers values
func NewDeviceRegistrationUnprocessableEntity() *DeviceRegistrationUnprocessableEntity {

	return &DeviceRegistrationUnprocessableEntity{}
}

// WithPayload adds the payload to the device registration unprocessable entity response
func (o *DeviceRegistrationUnprocessableEntity) WithPayload(payload *models.ErrorResult) *DeviceRegistrationUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the device registration unprocessable entity response
func (o *DeviceRegistrationUnprocessableEntity) SetPayload(payload *models.ErrorResult) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeviceRegistrationUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
